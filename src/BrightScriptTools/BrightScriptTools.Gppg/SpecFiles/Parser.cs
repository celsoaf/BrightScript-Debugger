// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, John Gough, QUT 2005-2014
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.0.0.0
// Machine:  CELSO-PC
// DateTime: 21/06/2016 16:46:20
// UserName: Celso
// Input file <SpecFiles\BrightScript.y - 21/06/2016 11:27:19>

// options: babel lines diagnose & report gplex

using System;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using System.Globalization;
using System.Text;
using BrightScriptTools.Gppg.GPGen;
using System.Collections;
using BrightScriptTools.GPlex;
using BrightScriptTools.GPlex.Parser;

namespace BrightScriptTools.Compiler
{
public enum Tokens {error=2,EOF=3,bar=4,dot=5,semi=6,
    star=7,lt=8,gt=9,ltEqual=10,gtEqual=11,notEqual=12,
    comma=13,slash=14,lBrac=15,rBrac=16,lPar=17,rPar=18,
    lBrace=19,rBrace=20,Eol=21,equal=22,plus=23,minus=24,
    questionMark=25,colon=26,bsIdent=27,bsNumber=28,bsStr=29,bsCmnt=30,
    bsFuncs=31,bsType=32,bsAs=33,bsTrue=34,bsFalse=35,bsInvalid=36,
    bsNot=37,bsM=38,bsStop=39,bsReturn=40,bsPrint=41,bsIf=42,
    bsElse=43,bsFor=44,bsTo=45,bsEach=46,bsStep=47,bsIn=48,
    bsWhile=49,bsSub=50,bsFunction=51,bsEnd=52,maxParseToken=53,EOL=54,
    comment=55,errTok=56,repErr=57};

// Abstract base class for GPLEX scanners
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.0.0.0")]
public abstract class ScanBase : AbstractScanner<int,LexSpan> {
  private LexSpan __yylloc = new LexSpan();
  public override LexSpan yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }

  protected abstract int CurrentSc { get; set; }
  //
  // Override the virtual EolState property if the scanner state is more
  // complicated then a simple copy of the current start state ordinal
  //
  public virtual int EolState { get { return CurrentSc; } set { CurrentSc = value; } }
}

// Interface class for 'colorizing' scanners
public interface IColorScan {
  void SetSource(string source, int offset);
  int GetNext(ref int state, out int start, out int end);
}

// Utility class for encapsulating token information
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.0.0.0")]
public class ScanObj {
  public int token;
  public int yylval;
  public LexSpan yylloc;
  public ScanObj( int t, int val, LexSpan loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.0.0.0")]
public partial class Parser: ShiftReduceParser<int, LexSpan>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliases;
#pragma warning restore 649
  private static Rule[] rules = new Rule[88];
  private static State[] states = new State[168];
  private static string[] nonTerms = new string[] {
      "Program", "$accept", "SourceElements", "EolOpt", "SourceElement", "SubDeclaration", 
      "FunctionDeclaration", "ParameterList", "Type", "StatementList", "Parameter", 
      "ParameterTail", "Literal", "Statement", "DebuggerStatement", "PrintStatement", 
      "SequenceExpression", "IterationStatement", "IfStatement", "AssignStatement", 
      "ReturnStatement", "SingleExpression", "Block", "MemberExpression", "BinaryExpression", 
      "UnaryExpression", "CallExpression", "LabelledStatementList", "LabelledStatement", 
      "LabelledStatementTail", "LabelSeparator", "FunctionStatement", "Arguments", 
      "MathOperator", "BooleanOperator", "NullLiteral", "BooleanLiteral", "StringLiteral", 
      "NumericLiteral", };

  static Parser() {
    states[0] = new State(new int[]{21,8,50,-17,51,-17,3,-17},new int[]{-1,1,-3,3,-4,5});
    states[1] = new State(new int[]{3,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{3,4});
    states[4] = new State(-2);
    states[5] = new State(new int[]{50,11,51,159,3,-3},new int[]{-5,6,-6,10,-7,158});
    states[6] = new State(new int[]{21,8,50,-17,51,-17,3,-17},new int[]{-3,7,-4,5});
    states[7] = new State(-4);
    states[8] = new State(new int[]{21,8,50,-17,51,-17,3,-17,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17,43,-17,20,-17},new int[]{-4,9});
    states[9] = new State(-18);
    states[10] = new State(-5);
    states[11] = new State(new int[]{27,12});
    states[12] = new State(new int[]{17,13});
    states[13] = new State(new int[]{27,63,18,-9},new int[]{-8,14,-11,58});
    states[14] = new State(new int[]{18,15});
    states[15] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,16,-4,19});
    states[16] = new State(new int[]{52,17});
    states[17] = new State(new int[]{50,18});
    states[18] = new State(-8);
    states[19] = new State(new int[]{39,23,41,25,25,117,19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76,44,123,49,138,42,144,40,155,52,-19,43,-19},new int[]{-14,20,-15,22,-16,24,-17,119,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75,-18,122,-19,143,-20,153,-21,154});
    states[20] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17,43,-17},new int[]{-10,21,-4,19});
    states[21] = new State(-20);
    states[22] = new State(-21);
    states[23] = new State(-36);
    states[24] = new State(-22);
    states[25] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,26,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[26] = new State(-37);
    states[27] = new State(new int[]{5,28,22,-39,21,-39,39,-39,41,-39,25,-39,19,-39,27,-39,17,-39,24,-39,37,-39,31,-39,36,-39,34,-39,35,-39,29,-39,28,-39,44,-39,49,-39,42,-39,40,-39,52,-39,43,-39,13,-39,20,-39,18,-39,45,-39});
    states[28] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,29,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[29] = new State(-40);
    states[30] = new State(-41);
    states[31] = new State(new int[]{21,8,27,-17,20,-17},new int[]{-28,32,-4,34});
    states[32] = new State(new int[]{20,33});
    states[33] = new State(-47);
    states[34] = new State(new int[]{27,44,20,-48},new int[]{-29,35});
    states[35] = new State(new int[]{21,38,13,43,20,-17},new int[]{-30,36,-4,37,-31,40});
    states[36] = new State(-49);
    states[37] = new State(-50);
    states[38] = new State(new int[]{21,8,20,-17,27,-17},new int[]{-4,39});
    states[39] = new State(new int[]{20,-18,27,-55});
    states[40] = new State(new int[]{27,44},new int[]{-29,41});
    states[41] = new State(new int[]{21,38,13,43,20,-17},new int[]{-30,42,-4,37,-31,40});
    states[42] = new State(-51);
    states[43] = new State(-56);
    states[44] = new State(new int[]{26,45});
    states[45] = new State(new int[]{51,48,19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-32,46,-17,47,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[46] = new State(-52);
    states[47] = new State(-53);
    states[48] = new State(new int[]{17,49});
    states[49] = new State(new int[]{27,63,18,-9},new int[]{-8,50,-11,58});
    states[50] = new State(new int[]{18,51});
    states[51] = new State(new int[]{33,56,21,-15,52,-15,39,-15,41,-15,25,-15,19,-15,27,-15,17,-15,24,-15,37,-15,31,-15,36,-15,34,-15,35,-15,29,-15,28,-15,44,-15,49,-15,42,-15,40,-15},new int[]{-9,52});
    states[52] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,53,-4,19});
    states[53] = new State(new int[]{52,54});
    states[54] = new State(new int[]{51,55});
    states[55] = new State(-54);
    states[56] = new State(new int[]{32,57});
    states[57] = new State(-16);
    states[58] = new State(new int[]{13,60,18,-11},new int[]{-12,59});
    states[59] = new State(-10);
    states[60] = new State(new int[]{27,63},new int[]{-11,61});
    states[61] = new State(new int[]{13,60,18,-11},new int[]{-12,62});
    states[62] = new State(-12);
    states[63] = new State(new int[]{22,65,33,56,13,-15,18,-15},new int[]{-9,64});
    states[64] = new State(-13);
    states[65] = new State(new int[]{36,69,34,71,35,72,29,74,28,76},new int[]{-13,66,-36,68,-37,70,-38,73,-39,75});
    states[66] = new State(new int[]{33,56,13,-15,18,-15},new int[]{-9,67});
    states[67] = new State(-14);
    states[68] = new State(-79);
    states[69] = new State(-83);
    states[70] = new State(-80);
    states[71] = new State(-84);
    states[72] = new State(-85);
    states[73] = new State(-81);
    states[74] = new State(-86);
    states[75] = new State(-82);
    states[76] = new State(-87);
    states[77] = new State(new int[]{17,104,23,107,24,108,7,109,14,110,8,111,10,112,9,113,11,114,22,115,12,116,5,-42,21,-42,39,-42,41,-42,25,-42,19,-42,27,-42,37,-42,31,-42,36,-42,34,-42,35,-42,29,-42,28,-42,44,-42,49,-42,42,-42,40,-42,52,-42,43,-42,13,-42,20,-42,18,-42,45,-42,16,-42},new int[]{-34,78,-35,102});
    states[78] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-22,79,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[79] = new State(-65);
    states[80] = new State(new int[]{15,81,17,-67,23,-67,24,-67,7,-67,14,-67,8,-67,10,-67,9,-67,11,-67,22,-67,12,-67,5,-67,21,-67,39,-67,41,-67,25,-67,19,-67,27,-67,37,-67,31,-67,36,-67,34,-67,35,-67,29,-67,28,-67,44,-67,49,-67,42,-67,40,-67,52,-67,43,-67,13,-67,20,-67,18,-67,45,-67,16,-67});
    states[81] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-22,82,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[82] = new State(new int[]{16,83});
    states[83] = new State(-68);
    states[84] = new State(-43);
    states[85] = new State(-44);
    states[86] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,87,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[87] = new State(new int[]{18,88});
    states[88] = new State(-62);
    states[89] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-22,90,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[90] = new State(-63);
    states[91] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-22,92,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[92] = new State(-64);
    states[93] = new State(-45);
    states[94] = new State(new int[]{17,95});
    states[95] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76,18,-59},new int[]{-33,96,-17,98,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[96] = new State(new int[]{18,97});
    states[97] = new State(-57);
    states[98] = new State(new int[]{13,99,18,-60});
    states[99] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76,18,-59},new int[]{-33,100,-17,98,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[100] = new State(-61);
    states[101] = new State(-46);
    states[102] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-22,103,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[103] = new State(-66);
    states[104] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76,18,-59},new int[]{-33,105,-17,98,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[105] = new State(new int[]{18,106});
    states[106] = new State(-58);
    states[107] = new State(-69);
    states[108] = new State(-70);
    states[109] = new State(-71);
    states[110] = new State(-72);
    states[111] = new State(-73);
    states[112] = new State(-74);
    states[113] = new State(-75);
    states[114] = new State(-76);
    states[115] = new State(-77);
    states[116] = new State(-78);
    states[117] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,118,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[118] = new State(-38);
    states[119] = new State(new int[]{22,120,21,-23,39,-23,41,-23,25,-23,19,-23,27,-23,17,-23,24,-23,37,-23,31,-23,36,-23,34,-23,35,-23,29,-23,28,-23,44,-23,49,-23,42,-23,40,-23,52,-23,43,-23});
    states[120] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,121,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[121] = new State(-28);
    states[122] = new State(-24);
    states[123] = new State(new int[]{46,130,19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-20,124,-17,137,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[124] = new State(new int[]{45,125});
    states[125] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,126,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[126] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,127,-4,19});
    states[127] = new State(new int[]{52,128});
    states[128] = new State(new int[]{44,129});
    states[129] = new State(-31);
    states[130] = new State(new int[]{27,131});
    states[131] = new State(new int[]{48,132});
    states[132] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,133,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[133] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,134,-4,19});
    states[134] = new State(new int[]{52,135});
    states[135] = new State(new int[]{44,136});
    states[136] = new State(-32);
    states[137] = new State(new int[]{22,120});
    states[138] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,139,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[139] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,140,-4,19});
    states[140] = new State(new int[]{52,141});
    states[141] = new State(new int[]{49,142});
    states[142] = new State(-33);
    states[143] = new State(-25);
    states[144] = new State(new int[]{19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,145,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[145] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17,43,-17},new int[]{-10,146,-4,19});
    states[146] = new State(new int[]{52,147,43,149});
    states[147] = new State(new int[]{42,148});
    states[148] = new State(-29);
    states[149] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,150,-4,19});
    states[150] = new State(new int[]{52,151});
    states[151] = new State(new int[]{42,152});
    states[152] = new State(-30);
    states[153] = new State(-26);
    states[154] = new State(-27);
    states[155] = new State(new int[]{21,157,19,31,27,80,17,86,24,89,37,91,31,94,36,69,34,71,35,72,29,74,28,76},new int[]{-17,156,-22,27,-23,30,-24,77,-25,84,-26,85,-27,93,-13,101,-36,68,-37,70,-38,73,-39,75});
    states[156] = new State(-34);
    states[157] = new State(-35);
    states[158] = new State(-6);
    states[159] = new State(new int[]{27,160});
    states[160] = new State(new int[]{17,161});
    states[161] = new State(new int[]{27,63,18,-9},new int[]{-8,162,-11,58});
    states[162] = new State(new int[]{18,163});
    states[163] = new State(new int[]{33,56,21,-15,52,-15,39,-15,41,-15,25,-15,19,-15,27,-15,17,-15,24,-15,37,-15,31,-15,36,-15,34,-15,35,-15,29,-15,28,-15,44,-15,49,-15,42,-15,40,-15},new int[]{-9,164});
    states[164] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,165,-4,19});
    states[165] = new State(new int[]{52,166});
    states[166] = new State(new int[]{51,167});
    states[167] = new State(-7);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,3});
    rules[2] = new Rule(-1, new int[]{-3,3});
    rules[3] = new Rule(-3, new int[]{-4});
    rules[4] = new Rule(-3, new int[]{-4,-5,-3});
    rules[5] = new Rule(-5, new int[]{-6});
    rules[6] = new Rule(-5, new int[]{-7});
    rules[7] = new Rule(-7, new int[]{51,27,17,-8,18,-9,-10,52,51});
    rules[8] = new Rule(-6, new int[]{50,27,17,-8,18,-10,52,50});
    rules[9] = new Rule(-8, new int[]{});
    rules[10] = new Rule(-8, new int[]{-11,-12});
    rules[11] = new Rule(-12, new int[]{});
    rules[12] = new Rule(-12, new int[]{13,-11,-12});
    rules[13] = new Rule(-11, new int[]{27,-9});
    rules[14] = new Rule(-11, new int[]{27,22,-13,-9});
    rules[15] = new Rule(-9, new int[]{});
    rules[16] = new Rule(-9, new int[]{33,32});
    rules[17] = new Rule(-4, new int[]{});
    rules[18] = new Rule(-4, new int[]{21,-4});
    rules[19] = new Rule(-10, new int[]{-4});
    rules[20] = new Rule(-10, new int[]{-4,-14,-10});
    rules[21] = new Rule(-14, new int[]{-15});
    rules[22] = new Rule(-14, new int[]{-16});
    rules[23] = new Rule(-14, new int[]{-17});
    rules[24] = new Rule(-14, new int[]{-18});
    rules[25] = new Rule(-14, new int[]{-19});
    rules[26] = new Rule(-14, new int[]{-20});
    rules[27] = new Rule(-14, new int[]{-21});
    rules[28] = new Rule(-20, new int[]{-17,22,-17});
    rules[29] = new Rule(-19, new int[]{42,-17,-10,52,42});
    rules[30] = new Rule(-19, new int[]{42,-17,-10,43,-10,52,42});
    rules[31] = new Rule(-18, new int[]{44,-20,45,-17,-10,52,44});
    rules[32] = new Rule(-18, new int[]{44,46,27,48,-17,-10,52,44});
    rules[33] = new Rule(-18, new int[]{49,-17,-10,52,49});
    rules[34] = new Rule(-21, new int[]{40,-17});
    rules[35] = new Rule(-21, new int[]{40,21});
    rules[36] = new Rule(-15, new int[]{39});
    rules[37] = new Rule(-16, new int[]{41,-17});
    rules[38] = new Rule(-16, new int[]{25,-17});
    rules[39] = new Rule(-17, new int[]{-22});
    rules[40] = new Rule(-17, new int[]{-22,5,-17});
    rules[41] = new Rule(-22, new int[]{-23});
    rules[42] = new Rule(-22, new int[]{-24});
    rules[43] = new Rule(-22, new int[]{-25});
    rules[44] = new Rule(-22, new int[]{-26});
    rules[45] = new Rule(-22, new int[]{-27});
    rules[46] = new Rule(-22, new int[]{-13});
    rules[47] = new Rule(-23, new int[]{19,-28,20});
    rules[48] = new Rule(-28, new int[]{-4});
    rules[49] = new Rule(-28, new int[]{-4,-29,-30});
    rules[50] = new Rule(-30, new int[]{-4});
    rules[51] = new Rule(-30, new int[]{-31,-29,-30});
    rules[52] = new Rule(-29, new int[]{27,26,-32});
    rules[53] = new Rule(-29, new int[]{27,26,-17});
    rules[54] = new Rule(-32, new int[]{51,17,-8,18,-9,-10,52,51});
    rules[55] = new Rule(-31, new int[]{21,-4});
    rules[56] = new Rule(-31, new int[]{13});
    rules[57] = new Rule(-27, new int[]{31,17,-33,18});
    rules[58] = new Rule(-27, new int[]{-24,17,-33,18});
    rules[59] = new Rule(-33, new int[]{});
    rules[60] = new Rule(-33, new int[]{-17});
    rules[61] = new Rule(-33, new int[]{-17,13,-33});
    rules[62] = new Rule(-26, new int[]{17,-17,18});
    rules[63] = new Rule(-26, new int[]{24,-22});
    rules[64] = new Rule(-26, new int[]{37,-22});
    rules[65] = new Rule(-25, new int[]{-24,-34,-22});
    rules[66] = new Rule(-25, new int[]{-24,-35,-22});
    rules[67] = new Rule(-24, new int[]{27});
    rules[68] = new Rule(-24, new int[]{27,15,-22,16});
    rules[69] = new Rule(-34, new int[]{23});
    rules[70] = new Rule(-34, new int[]{24});
    rules[71] = new Rule(-34, new int[]{7});
    rules[72] = new Rule(-34, new int[]{14});
    rules[73] = new Rule(-35, new int[]{8});
    rules[74] = new Rule(-35, new int[]{10});
    rules[75] = new Rule(-35, new int[]{9});
    rules[76] = new Rule(-35, new int[]{11});
    rules[77] = new Rule(-35, new int[]{22});
    rules[78] = new Rule(-35, new int[]{12});
    rules[79] = new Rule(-13, new int[]{-36});
    rules[80] = new Rule(-13, new int[]{-37});
    rules[81] = new Rule(-13, new int[]{-38});
    rules[82] = new Rule(-13, new int[]{-39});
    rules[83] = new Rule(-36, new int[]{36});
    rules[84] = new Rule(-37, new int[]{34});
    rules[85] = new Rule(-37, new int[]{35});
    rules[86] = new Rule(-38, new int[]{29});
    rules[87] = new Rule(-39, new int[]{28});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliases != null && aliases.ContainsKey(terminal))
        return aliases[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

#line 228 "SpecFiles\BrightScript.y"
 #line default
}
}
