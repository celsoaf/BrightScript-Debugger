// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, John Gough, QUT 2005-2014
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.0.0.0
// Machine:  CELSO-PC
// DateTime: 21/06/2016 23:15:24
// UserName: Celso
// Input file <SpecFiles\BrightScript.y - 21/06/2016 23:15:11>

// options: babel lines diagnose & report gplex

using System;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using System.Globalization;
using System.Text;
using BrightScriptTools.Gppg.GPGen;
using System.Collections;
using BrightScriptTools.GPlex;
using BrightScriptTools.GPlex.Parser;

namespace BrightScriptTools.Compiler
{
public enum Tokens {error=2,EOF=3,bar=4,dot=5,semi=6,
    star=7,lt=8,gt=9,ltEqual=10,gtEqual=11,notEqual=12,
    comma=13,slash=14,lBrac=15,rBrac=16,lPar=17,rPar=18,
    lBrace=19,rBrace=20,Eol=21,equal=22,plus=23,minus=24,
    questionMark=25,colon=26,bsIdent=27,bsNumber=28,bsStr=29,bsCmnt=30,
    bsFuncs=31,bsType=32,bsAs=33,bsTrue=34,bsFalse=35,bsInvalid=36,
    bsNot=37,bsM=38,bsStop=39,bsReturn=40,bsPrint=41,bsIf=42,
    bsElse=43,bsFor=44,bsTo=45,bsEach=46,bsStep=47,bsIn=48,
    bsWhile=49,bsSub=50,bsFunction=51,bsEnd=52,maxParseToken=53,EOL=54,
    comment=55,errTok=56,repErr=57};

// Abstract base class for GPLEX scanners
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.0.0.0")]
public abstract class ScanBase : AbstractScanner<int,LexSpan> {
  private LexSpan __yylloc = new LexSpan();
  public override LexSpan yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }

  protected abstract int CurrentSc { get; set; }
  //
  // Override the virtual EolState property if the scanner state is more
  // complicated then a simple copy of the current start state ordinal
  //
  public virtual int EolState { get { return CurrentSc; } set { CurrentSc = value; } }
}

// Interface class for 'colorizing' scanners
public interface IColorScan {
  void SetSource(string source, int offset);
  int GetNext(ref int state, out int start, out int end);
}

// Utility class for encapsulating token information
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.0.0.0")]
public class ScanObj {
  public int token;
  public int yylval;
  public LexSpan yylloc;
  public ScanObj( int t, int val, LexSpan loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.0.0.0")]
public partial class Parser: ShiftReduceParser<int, LexSpan>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliases;
#pragma warning restore 649
  private static Rule[] rules = new Rule[97];
  private static State[] states = new State[184];
  private static string[] nonTerms = new string[] {
      "Program", "$accept", "SourceElements", "EolOpt", "SourceElement", "SubDeclaration", 
      "FunctionDeclaration", "ParameterList", "Type", "StatementList", "Parameter", 
      "ParameterTail", "Literal", "Statement", "DebuggerStatement", "PrintStatement", 
      "SequenceExpression", "IterationStatement", "IfStatement", "AssignStatement", 
      "ReturnStatement", "SingleExpression", "Block", "IndexExpression", "MemberExpression", 
      "BinaryExpression", "UnaryExpression", "CallExpression", "LabelledStatementList", 
      "LabelledStatement", "LabelledStatementTail", "LabelSeparator", "FunctionStatement", 
      "Arguments", "MathOperator", "BooleanOperator", "EmptyBlock", "Array", 
      "NullLiteral", "BooleanLiteral", "StringLiteral", "NumericLiteral", "ArrayList", 
      "ArrayTail", };

  static Parser() {
    states[0] = new State(new int[]{21,8,50,-17,51,-17,3,-17},new int[]{-1,1,-3,3,-4,5});
    states[1] = new State(new int[]{3,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{3,4});
    states[4] = new State(-2);
    states[5] = new State(new int[]{50,11,51,175,3,-3},new int[]{-5,6,-6,10,-7,174});
    states[6] = new State(new int[]{21,8,50,-17,51,-17,3,-17},new int[]{-3,7,-4,5});
    states[7] = new State(-4);
    states[8] = new State(new int[]{21,8,50,-17,51,-17,3,-17,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17,43,-17,20,-17,16,-17},new int[]{-4,9});
    states[9] = new State(-18);
    states[10] = new State(-5);
    states[11] = new State(new int[]{27,12});
    states[12] = new State(new int[]{17,13});
    states[13] = new State(new int[]{27,87,18,-9},new int[]{-8,14,-11,82});
    states[14] = new State(new int[]{18,15});
    states[15] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,16,-4,19});
    states[16] = new State(new int[]{52,17});
    states[17] = new State(new int[]{50,18});
    states[18] = new State(-8);
    states[19] = new State(new int[]{39,23,41,25,25,133,19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132,44,139,49,154,42,160,40,171,52,-19,43,-19},new int[]{-14,20,-15,22,-16,24,-17,135,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131,-18,138,-19,159,-20,169,-21,170});
    states[20] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17,43,-17},new int[]{-10,21,-4,19});
    states[21] = new State(-20);
    states[22] = new State(-21);
    states[23] = new State(-36);
    states[24] = new State(-22);
    states[25] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,26,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[26] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,21,-37,39,-37,41,-37,25,-37,19,-37,27,-37,37,-37,31,-37,36,-37,34,-37,35,-37,29,-37,28,-37,44,-37,49,-37,42,-37,40,-37,52,-37,43,-37},new int[]{-35,30,-36,32});
    states[27] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,28,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[28] = new State(new int[]{16,29,15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52},new int[]{-35,30,-36,32});
    states[29] = new State(-69);
    states[30] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,31,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[31] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,5,-66,21,-66,39,-66,41,-66,25,-66,19,-66,27,-66,37,-66,31,-66,36,-66,34,-66,35,-66,29,-66,28,-66,44,-66,49,-66,42,-66,40,-66,52,-66,43,-66,16,-66,13,-66,18,-66,20,-66,45,-66},new int[]{-35,30,-36,32});
    states[32] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,33,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[33] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,5,-67,21,-67,39,-67,41,-67,25,-67,19,-67,27,-67,37,-67,31,-67,36,-67,34,-67,35,-67,29,-67,28,-67,44,-67,49,-67,42,-67,40,-67,52,-67,43,-67,16,-67,13,-67,18,-67,20,-67,45,-67},new int[]{-35,30,-36,32});
    states[34] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132,18,-60},new int[]{-34,35,-17,37,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[35] = new State(new int[]{18,36});
    states[36] = new State(-59);
    states[37] = new State(new int[]{15,27,17,34,13,38,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,18,-61},new int[]{-35,30,-36,32});
    states[38] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132,18,-60},new int[]{-34,39,-17,37,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[39] = new State(-62);
    states[40] = new State(new int[]{5,41,15,-39,17,-39,22,-39,23,-39,24,-39,7,-39,14,-39,8,-39,10,-39,9,-39,11,-39,12,-39,21,-39,39,-39,41,-39,25,-39,19,-39,27,-39,37,-39,31,-39,36,-39,34,-39,35,-39,29,-39,28,-39,44,-39,49,-39,42,-39,40,-39,52,-39,43,-39,16,-39,13,-39,18,-39,20,-39,45,-39});
    states[41] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,42,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[42] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,21,-40,39,-40,41,-40,25,-40,19,-40,27,-40,37,-40,31,-40,36,-40,34,-40,35,-40,29,-40,28,-40,44,-40,49,-40,42,-40,40,-40,52,-40,43,-40,16,-40,5,-40,13,-40,18,-40,20,-40,45,-40},new int[]{-35,30,-36,32});
    states[43] = new State(-70);
    states[44] = new State(-71);
    states[45] = new State(-72);
    states[46] = new State(-73);
    states[47] = new State(-74);
    states[48] = new State(-75);
    states[49] = new State(-76);
    states[50] = new State(-77);
    states[51] = new State(-78);
    states[52] = new State(-79);
    states[53] = new State(-41);
    states[54] = new State(new int[]{20,57,21,8,27,-17},new int[]{-29,55,-4,58});
    states[55] = new State(new int[]{20,56});
    states[56] = new State(-48);
    states[57] = new State(-91);
    states[58] = new State(new int[]{27,68,20,-49},new int[]{-30,59});
    states[59] = new State(new int[]{21,62,13,67,20,-17},new int[]{-31,60,-4,61,-32,64});
    states[60] = new State(-50);
    states[61] = new State(-51);
    states[62] = new State(new int[]{21,8,20,-17,27,-17,16,-17,19,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17},new int[]{-4,63});
    states[63] = new State(new int[]{20,-18,16,-18,27,-56,19,-56,17,-56,24,-56,37,-56,31,-56,15,-56,36,-56,34,-56,35,-56,29,-56,28,-56});
    states[64] = new State(new int[]{27,68},new int[]{-30,65});
    states[65] = new State(new int[]{21,62,13,67,20,-17},new int[]{-31,66,-4,61,-32,64});
    states[66] = new State(-52);
    states[67] = new State(-57);
    states[68] = new State(new int[]{26,69});
    states[69] = new State(new int[]{51,72,19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-33,70,-17,71,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[70] = new State(-53);
    states[71] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,21,-54,13,-54,20,-54},new int[]{-35,30,-36,32});
    states[72] = new State(new int[]{17,73});
    states[73] = new State(new int[]{27,87,18,-9},new int[]{-8,74,-11,82});
    states[74] = new State(new int[]{18,75});
    states[75] = new State(new int[]{33,80,21,-15,52,-15,39,-15,41,-15,25,-15,19,-15,27,-15,17,-15,24,-15,37,-15,31,-15,15,-15,36,-15,34,-15,35,-15,29,-15,28,-15,44,-15,49,-15,42,-15,40,-15},new int[]{-9,76});
    states[76] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,77,-4,19});
    states[77] = new State(new int[]{52,78});
    states[78] = new State(new int[]{51,79});
    states[79] = new State(-55);
    states[80] = new State(new int[]{32,81});
    states[81] = new State(-16);
    states[82] = new State(new int[]{13,84,18,-11},new int[]{-12,83});
    states[83] = new State(-10);
    states[84] = new State(new int[]{27,87},new int[]{-11,85});
    states[85] = new State(new int[]{13,84,18,-11},new int[]{-12,86});
    states[86] = new State(-12);
    states[87] = new State(new int[]{22,89,33,80,13,-15,18,-15},new int[]{-9,88});
    states[88] = new State(-13);
    states[89] = new State(new int[]{19,93,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-13,90,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[90] = new State(new int[]{33,80,13,-15,18,-15},new int[]{-9,91});
    states[91] = new State(-14);
    states[92] = new State(-80);
    states[93] = new State(new int[]{20,57});
    states[94] = new State(-81);
    states[95] = new State(new int[]{21,8,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17,16,-17},new int[]{-43,96,-4,98});
    states[96] = new State(new int[]{16,97});
    states[97] = new State(-92);
    states[98] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132,16,-93},new int[]{-17,99,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[99] = new State(new int[]{15,27,17,34,21,62,13,67,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,16,-17},new int[]{-44,100,-35,30,-36,32,-4,101,-32,102});
    states[100] = new State(-94);
    states[101] = new State(-95);
    states[102] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,103,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[103] = new State(new int[]{15,27,17,34,21,62,13,67,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,16,-17},new int[]{-44,104,-35,30,-36,32,-4,101,-32,102});
    states[104] = new State(-96);
    states[105] = new State(-42);
    states[106] = new State(-43);
    states[107] = new State(-68);
    states[108] = new State(-44);
    states[109] = new State(-45);
    states[110] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,111,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[111] = new State(new int[]{18,112,15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52},new int[]{-35,30,-36,32});
    states[112] = new State(-63);
    states[113] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-22,114,-23,53,-24,105,-17,115,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[114] = new State(new int[]{5,41,15,-39,17,-39,22,-39,23,-39,24,-39,7,-39,14,-39,8,-39,10,-39,9,-39,11,-39,12,-39,21,-64,39,-64,41,-64,25,-64,19,-64,27,-64,37,-64,31,-64,36,-64,34,-64,35,-64,29,-64,28,-64,44,-64,49,-64,42,-64,40,-64,52,-64,43,-64,16,-64,13,-64,18,-64,20,-64,45,-64});
    states[115] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52},new int[]{-35,30,-36,32});
    states[116] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-22,117,-23,53,-24,105,-17,115,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[117] = new State(new int[]{5,41,15,-39,17,-39,22,-39,23,-39,24,-39,7,-39,14,-39,8,-39,10,-39,9,-39,11,-39,12,-39,21,-65,39,-65,41,-65,25,-65,19,-65,27,-65,37,-65,31,-65,36,-65,34,-65,35,-65,29,-65,28,-65,44,-65,49,-65,42,-65,40,-65,52,-65,43,-65,16,-65,13,-65,18,-65,20,-65,45,-65});
    states[118] = new State(-46);
    states[119] = new State(new int[]{17,120});
    states[120] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132,18,-60},new int[]{-34,121,-17,37,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[121] = new State(new int[]{18,122});
    states[122] = new State(-58);
    states[123] = new State(-47);
    states[124] = new State(-82);
    states[125] = new State(-86);
    states[126] = new State(-83);
    states[127] = new State(-87);
    states[128] = new State(-88);
    states[129] = new State(-84);
    states[130] = new State(-89);
    states[131] = new State(-85);
    states[132] = new State(-90);
    states[133] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,134,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[134] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,21,-38,39,-38,41,-38,25,-38,19,-38,27,-38,37,-38,31,-38,36,-38,34,-38,35,-38,29,-38,28,-38,44,-38,49,-38,42,-38,40,-38,52,-38,43,-38},new int[]{-35,30,-36,32});
    states[135] = new State(new int[]{15,27,17,34,22,136,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,12,52,21,-23,39,-23,41,-23,25,-23,19,-23,27,-23,37,-23,31,-23,36,-23,34,-23,35,-23,29,-23,28,-23,44,-23,49,-23,42,-23,40,-23,52,-23,43,-23},new int[]{-35,30,-36,32});
    states[136] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,137,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[137] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,21,-28,39,-28,41,-28,25,-28,19,-28,27,-28,37,-28,31,-28,36,-28,34,-28,35,-28,29,-28,28,-28,44,-28,49,-28,42,-28,40,-28,52,-28,43,-28,45,-28},new int[]{-35,30,-36,32});
    states[138] = new State(-24);
    states[139] = new State(new int[]{46,146,19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-20,140,-17,153,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[140] = new State(new int[]{45,141});
    states[141] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,142,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[142] = new State(new int[]{15,27,17,34,21,8,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,39,-17,41,-17,25,-17,19,-17,27,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,143,-35,30,-36,32,-4,19});
    states[143] = new State(new int[]{52,144});
    states[144] = new State(new int[]{44,145});
    states[145] = new State(-31);
    states[146] = new State(new int[]{27,147});
    states[147] = new State(new int[]{48,148});
    states[148] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,149,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[149] = new State(new int[]{15,27,17,34,21,8,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,39,-17,41,-17,25,-17,19,-17,27,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,150,-35,30,-36,32,-4,19});
    states[150] = new State(new int[]{52,151});
    states[151] = new State(new int[]{44,152});
    states[152] = new State(-32);
    states[153] = new State(new int[]{22,136,15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,12,52},new int[]{-35,30,-36,32});
    states[154] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,155,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[155] = new State(new int[]{15,27,17,34,21,8,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,39,-17,41,-17,25,-17,19,-17,27,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,156,-35,30,-36,32,-4,19});
    states[156] = new State(new int[]{52,157});
    states[157] = new State(new int[]{49,158});
    states[158] = new State(-33);
    states[159] = new State(-25);
    states[160] = new State(new int[]{19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,161,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[161] = new State(new int[]{15,27,17,34,21,8,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,39,-17,41,-17,25,-17,19,-17,27,-17,37,-17,31,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17,43,-17},new int[]{-10,162,-35,30,-36,32,-4,19});
    states[162] = new State(new int[]{52,163,43,165});
    states[163] = new State(new int[]{42,164});
    states[164] = new State(-29);
    states[165] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,166,-4,19});
    states[166] = new State(new int[]{52,167});
    states[167] = new State(new int[]{42,168});
    states[168] = new State(-30);
    states[169] = new State(-26);
    states[170] = new State(-27);
    states[171] = new State(new int[]{21,173,19,54,27,107,17,110,24,113,37,116,31,119,15,95,36,125,34,127,35,128,29,130,28,132},new int[]{-17,172,-22,40,-23,53,-24,105,-25,106,-26,108,-27,109,-28,118,-13,123,-37,92,-38,94,-39,124,-40,126,-41,129,-42,131});
    states[172] = new State(new int[]{15,27,17,34,23,43,24,44,7,45,14,46,8,47,10,48,9,49,11,50,22,51,12,52,21,-34,39,-34,41,-34,25,-34,19,-34,27,-34,37,-34,31,-34,36,-34,34,-34,35,-34,29,-34,28,-34,44,-34,49,-34,42,-34,40,-34,52,-34,43,-34},new int[]{-35,30,-36,32});
    states[173] = new State(-35);
    states[174] = new State(-6);
    states[175] = new State(new int[]{27,176});
    states[176] = new State(new int[]{17,177});
    states[177] = new State(new int[]{27,87,18,-9},new int[]{-8,178,-11,82});
    states[178] = new State(new int[]{18,179});
    states[179] = new State(new int[]{33,80,21,-15,52,-15,39,-15,41,-15,25,-15,19,-15,27,-15,17,-15,24,-15,37,-15,31,-15,15,-15,36,-15,34,-15,35,-15,29,-15,28,-15,44,-15,49,-15,42,-15,40,-15},new int[]{-9,180});
    states[180] = new State(new int[]{21,8,39,-17,41,-17,25,-17,19,-17,27,-17,17,-17,24,-17,37,-17,31,-17,15,-17,36,-17,34,-17,35,-17,29,-17,28,-17,44,-17,49,-17,42,-17,40,-17,52,-17},new int[]{-10,181,-4,19});
    states[181] = new State(new int[]{52,182});
    states[182] = new State(new int[]{51,183});
    states[183] = new State(-7);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,3});
    rules[2] = new Rule(-1, new int[]{-3,3});
    rules[3] = new Rule(-3, new int[]{-4});
    rules[4] = new Rule(-3, new int[]{-4,-5,-3});
    rules[5] = new Rule(-5, new int[]{-6});
    rules[6] = new Rule(-5, new int[]{-7});
    rules[7] = new Rule(-7, new int[]{51,27,17,-8,18,-9,-10,52,51});
    rules[8] = new Rule(-6, new int[]{50,27,17,-8,18,-10,52,50});
    rules[9] = new Rule(-8, new int[]{});
    rules[10] = new Rule(-8, new int[]{-11,-12});
    rules[11] = new Rule(-12, new int[]{});
    rules[12] = new Rule(-12, new int[]{13,-11,-12});
    rules[13] = new Rule(-11, new int[]{27,-9});
    rules[14] = new Rule(-11, new int[]{27,22,-13,-9});
    rules[15] = new Rule(-9, new int[]{});
    rules[16] = new Rule(-9, new int[]{33,32});
    rules[17] = new Rule(-4, new int[]{});
    rules[18] = new Rule(-4, new int[]{21,-4});
    rules[19] = new Rule(-10, new int[]{-4});
    rules[20] = new Rule(-10, new int[]{-4,-14,-10});
    rules[21] = new Rule(-14, new int[]{-15});
    rules[22] = new Rule(-14, new int[]{-16});
    rules[23] = new Rule(-14, new int[]{-17});
    rules[24] = new Rule(-14, new int[]{-18});
    rules[25] = new Rule(-14, new int[]{-19});
    rules[26] = new Rule(-14, new int[]{-20});
    rules[27] = new Rule(-14, new int[]{-21});
    rules[28] = new Rule(-20, new int[]{-17,22,-17});
    rules[29] = new Rule(-19, new int[]{42,-17,-10,52,42});
    rules[30] = new Rule(-19, new int[]{42,-17,-10,43,-10,52,42});
    rules[31] = new Rule(-18, new int[]{44,-20,45,-17,-10,52,44});
    rules[32] = new Rule(-18, new int[]{44,46,27,48,-17,-10,52,44});
    rules[33] = new Rule(-18, new int[]{49,-17,-10,52,49});
    rules[34] = new Rule(-21, new int[]{40,-17});
    rules[35] = new Rule(-21, new int[]{40,21});
    rules[36] = new Rule(-15, new int[]{39});
    rules[37] = new Rule(-16, new int[]{41,-17});
    rules[38] = new Rule(-16, new int[]{25,-17});
    rules[39] = new Rule(-17, new int[]{-22});
    rules[40] = new Rule(-17, new int[]{-22,5,-17});
    rules[41] = new Rule(-22, new int[]{-23});
    rules[42] = new Rule(-22, new int[]{-24});
    rules[43] = new Rule(-22, new int[]{-25});
    rules[44] = new Rule(-22, new int[]{-26});
    rules[45] = new Rule(-22, new int[]{-27});
    rules[46] = new Rule(-22, new int[]{-28});
    rules[47] = new Rule(-22, new int[]{-13});
    rules[48] = new Rule(-23, new int[]{19,-29,20});
    rules[49] = new Rule(-29, new int[]{-4});
    rules[50] = new Rule(-29, new int[]{-4,-30,-31});
    rules[51] = new Rule(-31, new int[]{-4});
    rules[52] = new Rule(-31, new int[]{-32,-30,-31});
    rules[53] = new Rule(-30, new int[]{27,26,-33});
    rules[54] = new Rule(-30, new int[]{27,26,-17});
    rules[55] = new Rule(-33, new int[]{51,17,-8,18,-9,-10,52,51});
    rules[56] = new Rule(-32, new int[]{21,-4});
    rules[57] = new Rule(-32, new int[]{13});
    rules[58] = new Rule(-28, new int[]{31,17,-34,18});
    rules[59] = new Rule(-28, new int[]{-17,17,-34,18});
    rules[60] = new Rule(-34, new int[]{});
    rules[61] = new Rule(-34, new int[]{-17});
    rules[62] = new Rule(-34, new int[]{-17,13,-34});
    rules[63] = new Rule(-27, new int[]{17,-17,18});
    rules[64] = new Rule(-27, new int[]{24,-22});
    rules[65] = new Rule(-27, new int[]{37,-22});
    rules[66] = new Rule(-26, new int[]{-17,-35,-17});
    rules[67] = new Rule(-26, new int[]{-17,-36,-17});
    rules[68] = new Rule(-25, new int[]{27});
    rules[69] = new Rule(-24, new int[]{-17,15,-17,16});
    rules[70] = new Rule(-35, new int[]{23});
    rules[71] = new Rule(-35, new int[]{24});
    rules[72] = new Rule(-35, new int[]{7});
    rules[73] = new Rule(-35, new int[]{14});
    rules[74] = new Rule(-36, new int[]{8});
    rules[75] = new Rule(-36, new int[]{10});
    rules[76] = new Rule(-36, new int[]{9});
    rules[77] = new Rule(-36, new int[]{11});
    rules[78] = new Rule(-36, new int[]{22});
    rules[79] = new Rule(-36, new int[]{12});
    rules[80] = new Rule(-13, new int[]{-37});
    rules[81] = new Rule(-13, new int[]{-38});
    rules[82] = new Rule(-13, new int[]{-39});
    rules[83] = new Rule(-13, new int[]{-40});
    rules[84] = new Rule(-13, new int[]{-41});
    rules[85] = new Rule(-13, new int[]{-42});
    rules[86] = new Rule(-39, new int[]{36});
    rules[87] = new Rule(-40, new int[]{34});
    rules[88] = new Rule(-40, new int[]{35});
    rules[89] = new Rule(-41, new int[]{29});
    rules[90] = new Rule(-42, new int[]{28});
    rules[91] = new Rule(-37, new int[]{19,20});
    rules[92] = new Rule(-38, new int[]{15,-43,16});
    rules[93] = new Rule(-43, new int[]{-4});
    rules[94] = new Rule(-43, new int[]{-4,-17,-44});
    rules[95] = new Rule(-44, new int[]{-4});
    rules[96] = new Rule(-44, new int[]{-32,-17,-44});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliases != null && aliases.ContainsKey(terminal))
        return aliases[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

#line 252 "SpecFiles\BrightScript.y"
 #line default
}
}
